{
  "builders": [
    {
      "type": "digitalocean",
      "ssh_username": "root",
      "snapshot_name": "axiom-{{ user `region` }}-{{timestamp}}",
      "api_token": "{{ user `do_key` }}",
      "image": "ubuntu-20-04-x64",
      "region": "{{ user `region`  }}",
      "size": "s-1vcpu-1gb"
    }
  ],
  "provisioners": [
    {
      "type": "file",
      "source": "./configs",
      "destination":"/tmp/configs"
    },
    {
      "execute_command": "chmod +x {{ .Path }}; {{ .Vars }} sudo -E sh '{{ .Path }}'",
      "inline": [ 
        "add-apt-repository -y ppa:longsleep/golang-backports",
        "DEBIAN_FRONTEND=noninteractive UCF_FORCE_CONFFNEW=YES sudo apt-get -o Dpkg::Options::=--force-confdef -o Dpkg::Options::=--force-confnew -y --fix-missing install apt-transport-https ca-certificates debian-keyring zsh curl figlet python3.7 python3-pip python3-venv libpcap-dev ruby ruby-dev dirmngr gnupg-agent gnupg2 libpq-dev software-properties-common golang-go fonts-liberation libcairo2 libgbm1 libgdk-pixbuf2.0-0 libgtk-3-0 libxss1 xdg-utils jq ufw ranger bat grc mosh net-tools",
        "ufw allow 22",
        "ufw allow 2266",
        "ufw allow 60000/udp",
        "ufw allow 60001/udp",
        "ufw allow 60002/udp",
        "ufw allow 60003/udp",
        "ufw allow 60004/udp",
        "ufw allow 60005/udp",
        "ufw allow 60006/udp",
        "ufw allow 60007/udp",
        "ufw allow 60008/udp",
        "ufw allow 60009/udp",
        "ufw allow 60010/udp",
        "curl -fsSL get.docker.com | sh",
        "apt-get -qq install docker-ce",
        "wget https://bootstrap.pypa.io/get-pip.py",
        "pip install docker-py",
        "systemctl start docker",
        "ufw --force enable",
        "useradd -G sudo,docker -s /usr/bin/zsh -m op",
        "mkdir -p /home/op/.ssh /home/op/c2 /home/op/lists /home/op/bin /home/op/.config/ /home/op/work/ /home/op/.config/amass",
        "chown -R op:users /home/op",
        "echo 'op:{{ user `do_key` }}' | chpasswd",
        "rm /etc/resolv.conf",
        "rm -rf /etc/update-motd.d/*",
      	"mv /tmp/configs/sshd_config /etc/ssh/sshd_config",
        "mv /tmp/configs/resolv.conf /etc/resolv.conf",
        "mv /tmp/configs/docker /etc/default/docker",
        "mv /tmp/configs/authorized_keys /home/op/.ssh/authorized_keys",
        "mv /tmp/configs/tmux.conf /home/op/.tmux.conf",
        "mv /tmp/configs/tmux.conf.local /home/op/.tmux.conf.local",
        "mv /tmp/configs/tmux-splash.sh /home/op/bin/tmux-splash.sh",
        "mv /tmp/configs/zsh_history /home/op/.zsh_history",
        "mv /tmp/configs/00-header /etc/update-motd.d/00-header",
        "mv /tmp/configs/bashrc /home/op/.bashrc",
        "mv /tmp/configs/zshrc /home/op/.zshrc",
        "mv /tmp/configs/oh-my-zsh.tar.gz /home/op/.oh-my-zsh.tar.gz",
        "mv /tmp/configs/nvim.tar.gz /home/op/.config/nvim.tar.gz",
        "mv /tmp/configs/sudoers /etc/sudoers",
        "chattr +i /etc/resolv.conf",
        "chown -R op:users /home/op",
        "/bin/su -l op -c 'curl https://raw.githubusercontent.com/mitsuhiko/pipsi/master/get-pipsi.py | python3'",
        "wget -O /home/op/bin/ffuz https://raw.githubusercontent.com/pry0cc/ffuz/main/ffuz && chmod +x /home/op/bin/ffuz",
        "sudo wget https://raw.githubusercontent.com/xero/figlet-fonts/master/Bloody.flf -O /usr/share/figlet/Bloody.flf",
        "git clone https://github.com/codingo/Interlace.git /home/op/recon/interlace && cd /home/op/recon/interlace/ && python3 setup.py install",    
        "cd /home/op && tar -xf /home/op/.oh-my-zsh.tar.gz",
        "cd /home/op/.config/ && tar -xf /home/op/.config/nvim.tar.gz",
        "echo 'Installing fail2ban'",
        "apt-get -y install fail2ban",
		"echo 'Increasing ulimit'",
        "/bin/su -l root -c 'echo \"DefaultLimitNOFILE=655350\" >> /etc/systemd/user.conf'",
        "/bin/su -l root -c 'echo \"DefaultLimitNOFILE=655350\" >> /etc/systemd/system.conf'",
        "/bin/su -l root -c 'echo \"op hard nofile 655350\" >> /etc/security/limits.conf'",
        "/bin/su -l root -c 'echo \"op soft nofile 655350\" >> /etc/security/limits.conf'",
        "/bin/su -l root -c 'echo \"root hard nofile 655350\" >> /etc/security/limits.conf'",
        "/bin/su -l root -c 'echo \"root soft nofile 655350\" >> /etc/security/limits.conf'",        
        "echo 'Setting SSH Alive Internal'",
        "/bin/su -l root -c 'echo \"ClientAliveInterval 60\" | sudo tee -a /etc/ssh/sshd_config'",
        "/bin/su -l root -c 'echo \"ClientAliveCountMax 60\" | sudo tee -a /etc/ssh/sshd_config'",
        "/bin/su -l root -c 'echo \"MaxSessions 100\" | sudo tee -a /etc/ssh/sshd_config'",
        "/bin/su -l root -c 'echo \"net.ipv4.netfilter.ip_conntrack_max = 1048576\" | sudo tee -a /etc/sysctl.conf'",
        "/bin/su -l root -c 'echo \"net.nf_conntrack_max = 1048576\" | sudo tee -a /etc/sysctl.conf'",
        "/bin/su -l root -c 'echo \"net.core.somaxconn = 1048576\" | sudo tee -a /etc/sysctl.conf'",
        "/bin/su -l root -c 'echo \"net.ipv4.ip_local_port_range = 1024 65535\" | sudo tee -a /etc/sysctl.conf'",
        "/bin/su -l root -c 'echo \"1024 65535\" | sudo tee -a /proc/sys/net/ipv4/ip_local_port_range'",
        "/bin/su -l op -c 'go clean -modcache'",
        "/bin/su -l root -c 'rm -r /home/op/go/src/'",
        "/bin/su -l root -c 'rm -r /root/go/src/'",
        "/bin/su -l root -c 'apt-get clean'",
		"echo 'Installing gf'",
        "/bin/su -l op -c 'go get -u github.com/tomnomnom/gf'",
        "touch /home/op/.profile",
        "touch /home/op/.z",
        "chown -R op:users /home/op",
        "chmod +x /etc/update-motd.d/00-header",
        "chown root:root /etc/sudoers /etc/sudoers.d -R"
      ], "inline_shebang": "/bin/sh -x",
	  "type": "shell"
    }
  ]
}
